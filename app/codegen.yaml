overwrite: true
schema:
  - ${HASURA_ENDPOINT}:
      headers:
        x-hasura-admin-secret: ${HASURA_ADMIN_SECRET}
config:
  scalars:
    timestamptz: Date
    timestamp: Date
    uuid: string
    bigint: number
    float8: number
    json: 'Json'
  skipTypename: true
  enumsAsConst: true
  nonOptionalTypename: true
  immutableTypes: true
  preResolveTypes: true
generates:
  generated/graphql.tsx:
    documents:
      - './{components,pages}/**/*.{ts,tsx,graphql}'
      - '!./**/*.generated.{ts,tsx}'
    plugins:
      - add:
          content: '/* eslint-disable */'
      - add:
          content: >
            interface Json {
                [x: string]: string|number|boolean|Date|Json|JsonArray;
            }
            interface JsonArray extends Array<string|number|boolean|Date|Json|JsonArray> { }
      - 'fragment-matcher'
      - 'typescript'
      - 'typescript-operations'
      - 'typescript-react-apollo'
    config:
      apolloReactCommonImportFrom: '@apollo/client'
      avoidOptionals: true
      reactApolloVersion: 3
      withHooks: true
      withHOC: false
      withComponent: false
      exportFragmentSpreadSubTypes: true
      strict: true
      prettify: false
      documentMode: graphQLTag
  api-lib/generated/graphql.ts:
    documents:
      - './api/**/*.ts'
      - '!./**/*.generated.{ts,tsx}'
    plugins:
      - add:
          content: '/* eslint-disable */'
      - add:
          content: >
            interface Json {
                [x: string]: string|number|boolean|Date|Json|JsonArray;
            }
            interface JsonArray extends Array<string|number|boolean|Date|Json|JsonArray> { }
      - 'fragment-matcher'
      - 'typescript'
      - 'typescript-operations'
      - 'typescript-graphql-request'
